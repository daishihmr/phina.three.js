phina.namespace(function(){phina.define("phina.three.Mesh",{superClass:"phina.three.Object3D",colliders:null,init:function(t){if("string"==typeof t.$t){this.assetName=t.$t;const i=phina.asset.AssetManager.get("mesh",this.assetName);if(t.$t=i.clone(),!t.$t)throw new Error("Mesh Asset "+this.assetName+" not found");this.colliders=i.colliders.map(i=>(i=i.clone(),t.$t.add(i),i))}else this.colliders=[];t={}.$safe(t,{}),this.superInit(t),this.colliders.forEach(t=>{t.visible=!1})}});const t=new THREE.Matrix4;t.makeRotationFromEuler(new THREE.Euler(.5*Math.PI,Math.PI,0)),phina.define("phina.three.MeshAssetLoader",{superClass:"phina.asset.Asset",_static:{materialCache:{}},init:function(){this.superInit()},_load:function(i){(new THREE.ObjectLoader).load(this.src,n=>{let e=null;const o=[];n.traverse(i=>{i.isMesh&&(i.name.startsWith("collider.")?(i.material.wireframe=!0,o.push(i)):(i.geometry.applyMatrix(t),e=i))}),e&&(e.colliders=o,i(e))})}}),phina.asset.AssetLoader.register("mesh",(t,i)=>phina.three.MeshAssetLoader().load(i))}),phina.namespace(function(){phina.define("phina.three.MotionController",{superClass:"phina.accessory.Accessory",_beforeMotion:null,_currentMotion:null,_beforeAction:null,_currentAction:null,transitionTweener:null,init:function(){this.superInit(),this.on("attached",t=>{this.transitionTweener=phina.accessory.Tweener().attachTo(this.target),this.target._transitionWeightBefore=0,this.target._transitionWeightCurrent=0,this.target.$t.mixer.addEventListener("finished",t=>{this._currentMotion&&this._currentMotion.flare("finished")}),this.target.$t.mixer.addEventListener("loop",t=>{this._currentMotion&&this._currentMotion.flare("entered")})})},switchMotion:function(t,i){this._currentMotion!==t&&(this._beforeAction&&this._beforeAction.stop(),this._beforeMotion=this._currentMotion,this._beforeAction=this._currentAction,this._currentMotion=t,null==t._action&&(t._action=this.target.$t.mixer.clipAction(t._clip),t.loop?t._action.setLoop(THREE.LoopRepeat):(t._action.setLoop(THREE.LoopOnce),t._action.clampWhenFinished=!0)),this._currentAction=t._action,this._currentAction.stop(),this._currentAction.play(),this._currentAction.setEffectiveWeight(0),i?this.transitionTweener.clear().set({_transitionWeightBefore:this.target._transitionWeightCurrent,_transitionWeightCurrent:0}).to({_transitionWeightBefore:0,_transitionWeightCurrent:1},i).call(()=>{this._beforeAction&&(this._beforeAction.stop(),this._beforeAction=null)}):(this.target._transitionWeightBefore=0,this.target._transitionWeightCurrent=1,this._beforeAction&&(this._beforeAction.stop(),this._beforeAction=null)),this._beforeMotion&&this._beforeMotion.flare("exited"),t.flare("entered"))},setTime:function(t){return this.target.$t.mixer.time=0,this.target.$t.mixer.update(t),this},update:function(t){const i=this.target;this._beforeAction&&this._beforeAction.setEffectiveWeight(i._transitionWeightBefore),this._currentAction&&this._currentAction.setEffectiveWeight(i._transitionWeightCurrent),this._currentMotion&&this._currentMotion.update(this),i.$t.mixer.update(t.deltaTime/1e3)}}),phina.define("phina.three.Motion",{superClass:"phina.util.EventDispatcher",_transitions:null,loop:!1,_clip:null,_action:null,_timeEventListeners:null,init:function(t){this.superInit(),this._clip=t,this._transitions=[],this._timeEventListeners=[],this.on("entered",t=>{this._timeEventListeners.forEach(t=>{t.fired=!1})})},addTransition:function(t,i,n){if(4==arguments.length){const t=arguments[0],e=arguments[1];i=arguments[2],n=arguments[3],this._transitions.push({condition:()=>t[e],motion:i,duration:n||1})}else if("function"==typeof t)this._transitions.push({condition:t,motion:i,duration:n||1});else if("string"==typeof t){const e=!1;this.on("entered",()=>e=!1),this.on(t,()=>e=!0),this._transitions.push({condition:()=>e,motion:i,duration:n||0})}return this},addTimeEventListener:function(t,i){return this._timeEventListeners.push({time:t,listener:i,fired:!1}),this},at:function(t,i){return this.addTimeEventListener(t,i)},update:function(t){this._action&&this._timeEventListeners.forEach(t=>{!t.fired&&t.time<=1e3*this._action.time&&(t.listener.apply(this),t.fired=!0)}),this._transitions.forEach(i=>{i.condition()&&t.switchMotion(i.motion,i.duration)})},setLoop:function(t){return this.loop=t,this}})}),phina.namespace(function(){phina.define("phina.three.Object3D",{superClass:"phina.app.Element",$t:null,init:function(t){this.superInit(),t={}.$safe(t,{position:new THREE.Vector3,scale:new THREE.Vector3(1,1,1),rotation:new THREE.Euler,visible:!0}),this.$t=t.$t,this.position.copy(t.position),this.scale.copy(t.scale),this.rotation.copy(t.rotation),this.visible=t.visible,this._position2d=new THREE.Vector2},setPosition:function(t,i,n){return this.position.set(t,i,n),this},setScale:function(t,i,n){return i=void 0!==i?i:t,n=void 0!==n?n:t,this.scale.set(t,i,n),this},setRotationX:function(t){return this.rotationX=t,this},setRotationY:function(t){return this.rotationY=t,this},setRotationZ:function(t){return this.rotationZ=t,this},_accessor:{position2d:{get:function(){return this._position2d.x=this.$t.position.x,this._position2d.y=this.$t.position.z,this._position2d}},position:{get:function(){return this.$t.position}},scale:{get:function(){return this.$t.scale}},rotation:{get:function(){return this.$t.rotation}},quaternion:{get:function(){return this.$t.quaternion}},matrix:{get:function(){return this.$t.matrix}},x:{get:function(){return this.$t.position.x},set:function(t){this.$t.position.x=t}},y:{get:function(){return this.$t.position.y},set:function(t){this.$t.position.y=t}},z:{get:function(){return this.$t.position.z},set:function(t){this.$t.position.z=t}},scaleX:{get:function(){return this.$t.scale.x},set:function(t){this.$t.scale.x=t}},scaleY:{get:function(){return this.$t.scale.y},set:function(t){this.$t.scale.y=t}},scaleZ:{get:function(){return this.$t.scale.z},set:function(t){this.$t.scale.z=t}},rotationX:{get:function(){return this.$t.rotation.x},set:function(t){this.$t.rotation.x=t}},rotationY:{get:function(){return this.$t.rotation.y},set:function(t){this.$t.rotation.y=t}},rotationZ:{get:function(){return this.$t.rotation.z},set:function(t){this.$t.rotation.z=t}},visible:{get:function(){return this.$t.visible},set:function(t){this.$t.visible=t}}}})}),phina.namespace(function(){phina.define("phina.three.SkinnedMesh",{superClass:"phina.three.Mesh",_motionCache:null,centerPosition:null,init:function(t){"string"==typeof t.$t&&(this.assetName=t.$t,t.$t=phina.asset.AssetManager.get("skinned",this.assetName).clone()),this.superInit(t),this.$t.mixer=new THREE.AnimationMixer(this.$t),this._motionCache={}},createMotion:function(t){let i="number"==typeof t?this.$t.geometry.animations[t]:THREE.AnimationClip.findByName(this.$t,t);return Motion(i)},getMotion:function(t){if(null==this._motionCache[t]){let i="number"==typeof t?this.$t.geometry.animations[t]:THREE.AnimationClip.findByName(this.$t,t);this._motionCache[t]=Motion(i)}return this._motionCache[t]},playDefaultMotion:function(t){const i=t?this.getMotion(t).setLoop(!0):this.getMotion(0).setLoop(!0);this.motionController.switchMotion(i)},_accessor:{motionController:{get:function(){return null==this._motionController&&(this._motionController=phina.three.MotionController().attachTo(this)),this._motionController}}}}),phina.define("phina.three.SkinnedAsset",{superClass:"phina.asset.Asset",init:function(){this.superInit()},_load:function(t){const i=this.src;(new THREE.ObjectLoader).load(i,i=>{i.traverse(i=>{i instanceof THREE.SkinnedMesh&&t(i)})})}}),phina.asset.AssetLoader.register("skinned",(t,i)=>phina.three.SkinnedAsset().load(i))});